<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ouroom.web.stat.StatMapper">

	<resultMap id="statbigbean" type="hashmap">
		<result column="visitDate" property="visitDate" javaType="string"/>
		<result column="count" property="count" javaType="int" />
		<result column="sum" property="sum" javaType="int" />
		<result column="smmDate" property="smmDate" javaType="string" />
		<result column="smmSale" property="smmSale" javaType="int" />
		<result column="postCount" property="postCount" javaType="int" />
		<result column="joinCount" property="joinCount" javaType="int" />
		<result column="totalsaleperday" property="totalSalePerDay" javaType="int" />
		<result column="categorysOfBestSeller" property="categorysOfBestSeller" javaType="string" />
		<result column="sumOfBestSeller" property="sumOfBestSeller" javaType="int" />
		<result column="totalVisitor" property="totalVisitor" javaType="int" />
		<result column="memberVisitor" property="memberVisitor" javaType="int" />
		<result column="maleC" property="maleC" javaType="int" />
		<result column="femaleC" property="femaleC" javaType="int" />
		
	</resultMap>

	<select id="drawsvlc" resultMap="statbigbean">
		 SELECT visit_date AS visitDate , COUNT(*) AS count FROM visitor 
		 WHERE visit_date BETWEEN #{stD} AND #{enD}
		 GROUP BY visit_date ;
	</select>
	<select id="drawsvcc" resultMap="statbigbean">
		 SELECT a.purchase_date AS smmDate, sum(b.sum * a.cnt) AS smmSale
				FROM item b
					JOIN (SELECT item_seq , SUM(cnt) cnt, purchase_date
						FROM purchase
						WHERE purchase_date between #{stD} and #{enD}
						GROUP BY item_seq, purchase_date) a
					ON b.seq = a.item_seq
				GROUP BY a.purchase_date;
	</select>
	<select id="extrsvvc" resultMap="statbigbean">
		    SELECT SUM(view_cnt) AS postCount 
		    FROM post  
		    WHERE regi_date LIKE #{postStartDate} 
			GROUP BY regi_date ;
	</select>
	<select id="extrsvjc" resultMap="statbigbean">
		    SELECT COUNT(join_date) AS joinCount 
		    FROM member 
		    WHERE join_date LIKE #{selectD} 
		    GROUP BY join_date;
	</select>
	<select id="totalSalePerDay" resultMap="statbigbean">
			SELECT sum(cnt) totalSalePerDay 
			FROM purchase 
			WHERE purchase_date LIKE #{selectD} 
	</select>
	<select id="bestSellerPerDay" resultMap="statbigbean">
			SELECT d.CATEGORY_KR AS categorysOfBestSeller, SUM(c.summ) AS sumOfBestSeller
			FROM category2 d
				join (SELECT a.ITEM_SEQ ITEM_SEQ, b.CATEGORY2_SEQ CATEGORY2_SEQ, a.purchase_date purchase_date, a.summ summ
			    			FROM item b
			    			join (SELECT ITEM_SEQ, sum(cnt) summ, PURCHASE_DATE
			          			FROM purchase 
			          			WHERE purchase_date like '2018-11-15'
			          			GROUP BY item_seq, purchase_date) a
			          	on a.ITEM_SEQ = b.seq) c
			     on d.SEQ LIKE c.CATEGORY2_SEQ
			GROUP BY d.SEQ
			ORDER BY summ desc
			LIMIT 5
	</select>
	
	<!-- <select id="drawsvcc"  statementType="CALLABLE" resultMap="statbigbean" >
		 {?=call sp_select_totalsale[(#{stD, mode=IN, jdbcType=VARCHAR, javaType=string},
				 #{enD, mode=IN, jdbcType=VARCHAR, javaType=string}
		 )]}
	</select>-->
	
	
	<!-- 밑 둘은 프로시져로 하면 하나로 줄일 수 있을 거 같은데, -->
	<select id="drawvstac" resultMap="statbigbean">
			select  b.cc AS totalVisitor, c.cc AS memberVisitor, a.VISIT_DATE AS visitDate
			FROM visitor a
			  JOIN (SELECT count(*) AS cc, VISIT_DATE
			        FROM visitor
			        WHERE VISIT_DATE BETWEEN #{stD} AND #{enD} group by VISIT_DATE)b
			    ON a.VISIT_DATE LIKE b.VISIT_DATE
			  JOIN (SELECT count(*) AS cc, VISIT_DATE
			        FROM visitor
			        WHERE VISIT_DATE BETWEEN #{stD} AND #{enD}
			        	 AND MEM_VALI LIKE 1 group by VISIT_DATE)c
			    ON a.VISIT_DATE LIKE c.VISIT_DATE
			group by a.VISIT_DATE
	</select>
	
	<select id="extrvstt" resultMap="statbigbean">
		select * from v_totalvisitorcount where date between #{stD} and #{enD}
	</select>
	
	
	

</mapper>